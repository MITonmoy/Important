<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
  </configSections>
  <log4net>
    <root>
      <!--if no level is selected , then default level is info-->

      <!--<level value="DEBUG" />-->
      <!--Means log each level-->
      <level value="INFO" /> 
      <!--Means log info,warn,fatal level-->
      <!--<level value="WARN" /> Means log warn,fatal-->
      <!--<level value="ERROR" />-->
      <!--fatal level is always logged-->
      <!--<appender-ref ref="ADONetAppender" />-->
      <appender-ref ref="RollingFileAppender"/>
    </root>
    <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="Errors\Error.log"/>
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />

      <!--What is a composite log?  It does two things.  First, if the log gets beyond a size of 100MB (maximumFileSize),
      the log file is cleared out and a new one is started.  But wait - why would we want to loose log information like that?  
      We don't, so we set maxSizeRollBackups to 100.  This tells log4net that when a file reaches 100MB, 
      first copy it and give it an extension of ".1", then start the new log.  
      If the log fills up again, log.1 is turned into log.2, and so on , with up to 100 logs in this manner.
      
      Now if we log over 100 copies of our 100 MB file, first I'd say something is wrong!  But imagine a website or a service, 
      which runs continuously.  That system will eventually fill up.  This is where the composite part comes in.  
      Our log will not only roll at a certain size, but will also roll with the date.

      The datePattern tells the appender when to roll the log by date, and what format to use.  Our example uses yyyyMMdd, 
      which tells the log to roll whenever the day changes.  In this case, then our log, foo.log, 
      would roll with a date, as in foo.log20080821
      
      if your app tends to roll over its size limit as well, you'll have a mixture of date-rolled and size-rolled logs, as in:

      foo.log
      foo.log20080815
      foo.log20080815.1
      foo.log20080815.2
      foo.log20080816
      foo.log20080817
      -->

      <rollingStyle value="Composite"/>
      <datePattern value="yyyyMMdd"/>
      <maxSizeRollBackups value="100"/>
      <maximumFileSize value="100MB"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="-----------------------------------------------------------------%newline     %date [%thread] %-5level %logger [%property{NDC}] –%newline     %message%newline"/>
      </layout>
    </appender>
  </log4net>
</configuration>

